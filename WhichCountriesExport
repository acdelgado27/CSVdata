import edu.duke.*;
import org.apache.commons.csv.*;
/**
 * Write a descrip
 * ]tion of othercode here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */

public class WhichCountriesExport {
     public void tester(){
         FileResource fr = new FileResource();
         CSVParser parser = fr.getCSVParser();
        String countryInformation = countryInfo(parser, "Nauru");
         System.out.println(countryInformation);
         listExportersTwoProducts(parser, "gold", "diamonds");
         int numExporters = numberOfExporters(parser, "sugar");
        System.out.println("The number of exporters is: " + numExporters);
        bigExporters(parser, "$999,999,999,999");
    }
    public String countryInfo(CSVParser parser, String country){
        //for each row in the csv file
        for (CSVRecord record : parser) {
            //look at the countries 
            String countries = record.get("Country");
            //if the country is found
                if (countries.contains(country)){
                String exports = record.get("Exports");
                String value = record.get("Value (dollars)");
                String countryInformation = country + ": " + exports + ": " + value;
                //return a string with the established variable concatenated together
                return countryInformation;
            }
        }
        String noneFound = "NOT FOUND"; 
        return noneFound;
    }
    public void listExportersTwoProducts(CSVParser parser, String exportItem1, String exportItem2){
        for (CSVRecord record : parser) {String country = record.get("Country");
            String exports = record.get("Exports");
            if (exports.contains(exportItem1) && exports.contains(exportItem2)) {
                System.out.println("The country " + country + " exports the two items that you entered.");
            }
        }
    }   
    public int numberOfExporters(CSVParser parser, String exportItem) {
        int count = 0;
        for (CSVRecord record: parser) {
            String exports = record.get("Exports");
            if (exports.contains(exportItem)) {
                count++;
            }
        }   
        return count;
     }
    public void bigExporters(CSVParser parser, String valueInDollarFormat){
         for (CSVRecord record: parser) {
             String value = record.get("Value (dollars)");
             if (value.length() > valueInDollarFormat.length()) {
                 String country = record.get("Country");
                 System.out.print(country + " ");
                 System.out.println(value);
                }
            }
    }
    public void listExporters(CSVParser parser, String exportOfInterest) {
        //for each row in CSV File
        for (CSVRecord record : parser) {
            //look at the "Exports" 
            String export = record.get("Exports");
            //check if it contains exportOfInterest
            if (export.contains(exportOfInterest)) {
                //If so, write down the "Country" from that 
                String country = record.get("Country");
                System.out.println(country);
            }
        }
    }
    public void whoExportsCoffee() {
        FileResource fr = new FileResource();
        CSVParser parser= fr.getCSVParser();
        listExporters(parser, "fuel");
    }
}
